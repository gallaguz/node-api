{
    "name": "api",
    "version": "1.0.0",
    "description": "",
    "prisma": {
        "schema": "src/database/prisma/schema.prisma"
    },
    "_moduleAliases": {
        "@app": "./dist"
    },
    "scripts": {
        "init:local": "npm run build:local && npm run migrate:local && npm run seed:local",
        "start:local": "docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env up --remove-orphans",
        "start:local:d": "docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env up -d --remove-orphans",
        "start:local:logs": "docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env up -d --remove-orphans && docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env logs --follow",
        "stop:local": "docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env down --remove-orphans",
        "build:local": "docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env build",
        "migrate:local": "docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env up -d && docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env exec -T node_api_local npx prisma migrate dev && docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env down --remove-orphans",
        "seed:local": "docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env up -d && docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env exec -T node_api_local ts-node --esm src/database/prisma/seed/local.ts && docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env down --remove-orphans",
        "init:production": "npm run build:production && npm run migrate:production && npm run seed:production",
        "start:production": "docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env up -d --remove-orphans",
        "start:production:logs": "docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env up -d --remove-orphans && docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env logs --follow",
        "stop:production": "docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env down --remove-orphans",
        "build:production": "docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env build",
        "migrate:production": "docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env up -d && docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env exec -T node_api_production npx prisma migrate dev && docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env down --remove-orphans",
        "seed:production": "docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env up -d && docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env exec -T node_api_production node -r module-alias/register ./dist/database/prisma/seed/production.js && docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env down --remove-orphans",
        "init:development": "npm run build:development && npm run migrate:development",
        "start:development": "docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env up -d --remove-orphans",
        "start:development:logs": "docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env up -d --remove-orphans && docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env logs --follow",
        "stop:development": "docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env down --remove-orphans",
        "build:development": "docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env build",
        "migrate:development": "docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env up -d && docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env exec -T node_api_development npx prisma migrate deploy && docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env down --remove-orphans",
        "seed:development": "docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env up -d && docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env exec -T node_api_development node -r module-alias/register ./dist/database/prisma/seed/development.js && docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env down --remove-orphans",
        "init:staging": "npm run build:staging && npm run migrate:staging && npm run seed:staging",
        "start:staging": "docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env up -d --remove-orphans",
        "start:staging:logs": "docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env up -d --remove-orphans && docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env logs --follow",
        "stop:staging": "docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env down --remove-orphans",
        "build:staging": "docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env build",
        "migrate:staging": "docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env up -d && docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env exec -T node_api_staging npx prisma migrate deploy && docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env down --remove-orphans",
        "seed:staging": "docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env up -d && docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env exec -T node_api_staging node -r module-alias/register ./dist/database/prisma/seed/staging.js && docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env down --remove-orphans",
        "init:testing": "npm run build:testing && npm run migrate:testing",
        "test": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env up -d --remove-orphans && docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env run -T node_api_testing npx prisma migrate dev && docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env run node_api_testing npx jest || true && docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env down --remove-orphans",
        "test:cov": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env up -d --remove-orphans && docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env run -T node_api_testing npx prisma migrate dev && docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env run node_api_testing npx jest  --coverage || true && docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env down --remove-orphans",
        "test:e2e": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env up -d --remove-orphans && docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env run -T node_api_testing npx prisma migrate dev && docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env run node_api_testing npx jest --config jest.e2e.config.ts || true && docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env down --remove-orphans",
        "test:e2e:cov": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env up -d --remove-orphans && docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env run -T node_api_testing npx prisma migrate dev && docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env run node_api_testing npx jest --config jest.e2e.config.ts --coverage || true && docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env down --remove-orphans",
        "build:testing": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env build",
        "migrate:testing": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env up -d && docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env run -T node_api_testing npx prisma migrate dev && docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env down --remove-orphans",
        "lint": "eslint ./src/**",
        "lint:fix": "eslint ./src/** --fix",
        "prepare": "husky install"
    },
    "keywords": [],
    "author": "",
    "license": "ISC",
    "dependencies": {
        "@prisma/client": "^5.3.0",
        "bcryptjs": "^2.4.3",
        "body-parser": "^1.20.0",
        "class-transformer": "^0.5.1",
        "class-validator": "^0.14.0",
        "cookie-parser": "^1.4.6",
        "dotenv": "^16.0.1",
        "express": "^4.18.0",
        "inversify": "^6.0.1",
        "jsonwebtoken": "^9.0.0",
        "module-alias": "^2.2.2",
        "morgan": "^1.10.0",
        "prisma": "^5.3.0",
        "reflect-metadata": "^0.1.13",
        "winston": "^3.10.0"
    },
    "devDependencies": {
        "@faker-js/faker": "^8.0.2",
        "@types/bcryptjs": "^2.4.2",
        "@types/cookie-parser": "^1.4.4",
        "@types/express": "^4.17.13",
        "@types/jest": "^28.1.6",
        "@types/jsonwebtoken": "^8.5.8",
        "@types/morgan": "^1.9.5",
        "@types/node": "^17.0.30",
        "@types/supertest": "^2.0.12",
        "@typescript-eslint/eslint-plugin": "^5.21.0",
        "@typescript-eslint/parser": "^5.21.0",
        "eslint": "^8.14.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-import-resolver-typescript": "^3.4.0",
        "eslint-plugin-import": "^2.26.0",
        "eslint-plugin-prettier": "^4.0.0",
        "husky": "^8.0.3",
        "jest": "^28.1.3",
        "nodemon": "^2.0.16",
        "pre-commit": "^1.2.2",
        "prettier": "^2.6.2",
        "supertest": "^6.2.4",
        "ts-jest": "^28.0.7",
        "ts-node": "^10.7.0",
        "tsconfig-paths": "^4.1.0",
        "typescript": "^5.2.2"
    }
}
