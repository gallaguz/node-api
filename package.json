{
    "name": "api",
    "version": "1.0.0",
    "description": "",
    "prisma": {
        "schema": "src/database/prisma/schema.prisma"
    },
    "_moduleAliases": {
        "@app": "./dist"
    },
    "scripts": {
        "local:init": "npm run local:build && npm run local:up && npm run local:migrate && npm run local:seed && npm run local:stop",
        "local:build": "docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env build",
        "local:start": "npm run local:up && npm run local:logs",
        "local:up": "docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env up -d --remove-orphans",
        "local:logs": "docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env logs --follow",
        "local:stop": "docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env down --remove-orphans",
        "local:migrate": "docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env exec -T node_api_local npx prisma migrate dev",
        "local:reset": "docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env exec -T node_api_local npx prisma migrate reset --force",
        "local:interact": "docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env exec  node_api_local sh",
        "local:seed": "docker-compose -f docker-compose-local.yaml --env-file .environment/.local.env exec -T node_api_local ts-node --esm src/database/prisma/seed/local.ts",
        "prod:init": "npm run prod:build && npm run prod:up && npm run prod:migrate && npm run prod:stop",
        "prod:build": "docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env build",
        "prod:start": "npm run stage:up && npm run stage:logs",
        "prod:up": "docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env up -d --remove-orphans",
        "prod:start:logs": "docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env logs --follow",
        "prod:stop": "docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env down --remove-orphans",
        "prod:migrate": "docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env exec -T node_api_production npx prisma migrate dev",
        "prod:interact": "docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env exec  node_api_production sh",
        "prod:seed": "docker-compose -f docker-compose-production.yaml --env-file .environment/.production.env exec -T node_api_production node -r module-alias/register ./dist/database/prisma/seed/production.js ",
        "dev:init": "npm run dev:build && npm run dev:up && npm run dev:migrate && npm run dev:stop",
        "dev:build": "docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env build",
        "dev:start": "npm run dev:up && npm run dev:logs",
        "dev:up": "docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env up -d --remove-orphans",
        "dev:logs": "docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env logs --follow",
        "dev:stop": "docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env down --remove-orphans",
        "dev:migrate": "docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env exec -T node_api_development npx prisma migrate deploy",
        "dev:reset": "docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env exec -T node_api_development npx prisma migrate reset --force",
        "dev:interact": "docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env exec  node_api_development sh",
        "dev:seed": "docker-compose -f docker-compose-development.yaml --env-file .environment/.development.env exec -T node_api_development node -r module-alias/register ./dist/database/prisma/seed/development.js",
        "stage:init": "npm run stage:build && npm run stage:up && npm run stage:migrate && npm run stage:seed && npm run stage:stop",
        "stage:build": "docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env build",
        "stage:start": "npm run stage:up && npm run stage:logs",
        "stage:up": "docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env up -d --remove-orphans",
        "stage:logs": "docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env logs --follow",
        "stage:stop": "docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env down --remove-orphans",
        "stage:migrate": "docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env exec -T node_api_staging npx prisma migrate deploy",
        "stage:reset": "docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env exec -T node_api_staging npx prisma migrate reset --force",
        "stage:seed": "docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env exec -T node_api_staging node -r module-alias/register ./dist/database/prisma/seed/staging.js",
        "stage:interact": "docker-compose -f docker-compose-staging.yaml --env-file .environment/.staging.env exec  node_api_staging sh",
        "test:init": "npm run test:build && npm run test:up && npm run test:migrate && npm run test:stop",
        "test": "npm run test:up && npm run test:reset && npm run _test && npm run test:stop",
        "test:cov": "npm run test:up && npm run test:reset && npm run _test:cov && npm run test:stop",
        "test:e2e": "npm run test:up && npm run test:reset && npm run _test:e2e && npm run test:stop",
        "test:e2e:cov": "npm run test:up && npm run test:reset && npm run _test:e2e:cov && npm run test:stop",
        "test:build": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env build",
        "test:up": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env up -d --remove-orphans",
        "test:migrate": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env run -T node_api_testing npx prisma migrate dev",
        "test:reset": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env run -T node_api_testing npx prisma migrate reset --force",
        "_test": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env run node_api_testing npx jest",
        "_test:cov": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env run node_api_testing npx jest  --coverage",
        "_test:e2e": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env run node_api_testing npx jest --config jest.e2e.config.ts",
        "_test:e2e:cov": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env run node_api_testing npx jest --config jest.e2e.config.ts --coverage",
        "test:stop": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env down --remove-orphans",
        "test:interact": "docker-compose -f docker-compose-testing.yaml --env-file .environment/.testing.env exec  node_api_testing sh",
        "lint": "eslint ./src/**",
        "lint:fix": "eslint ./src/** --fix"
    },
    "keywords": [],
    "author": "",
    "license": "ISC",
    "dependencies": {
        "@prisma/client": "^5.3.0",
        "bcryptjs": "^2.4.3",
        "body-parser": "^1.20.0",
        "class-transformer": "^0.5.1",
        "class-validator": "^0.14.0",
        "cookie-parser": "^1.4.6",
        "dotenv": "^16.0.1",
        "express": "^4.18.0",
        "helmet": "^7.0.0",
        "inversify": "^6.0.1",
        "jsonwebtoken": "^9.0.0",
        "module-alias": "^2.2.2",
        "morgan": "^1.10.0",
        "prisma": "^5.3.0",
        "reflect-metadata": "^0.1.13",
        "winston": "^3.10.0"
    },
    "devDependencies": {
        "@faker-js/faker": "^8.0.2",
        "@types/bcryptjs": "^2.4.2",
        "@types/cookie-parser": "^1.4.4",
        "@types/express": "^4.17.13",
        "@types/jest": "^28.1.6",
        "@types/jsonwebtoken": "^8.5.8",
        "@types/morgan": "^1.9.5",
        "@types/node": "^17.0.30",
        "@types/supertest": "^2.0.12",
        "@typescript-eslint/eslint-plugin": "^5.21.0",
        "@typescript-eslint/parser": "^5.21.0",
        "axios": "^1.5.0",
        "eslint": "^8.49.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-import-resolver-typescript": "^3.4.0",
        "eslint-plugin-import": "^2.26.0",
        "eslint-plugin-prettier": "^4.0.0",
        "husky": "^8.0.3",
        "jest": "^28.1.3",
        "nodemon": "^2.0.16",
        "pre-commit": "^1.2.2",
        "prettier": "^2.6.2",
        "supertest": "^6.2.4",
        "ts-jest": "^28.0.7",
        "ts-node": "^10.7.0",
        "tsconfig-paths": "^4.1.0",
        "typescript": "^5.2.2"
    }
}
